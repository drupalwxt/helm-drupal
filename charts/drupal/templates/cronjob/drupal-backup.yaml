{{- if .Values.drupal.backup.enabled }}
{{- if semverCompare ">=1.21" $.Capabilities.KubeVersion.GitVersion }}
apiVersion: batch/v1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ template "drupal.fullname" . }}-drupal-backup
  labels:
    app.kubernetes.io/name: {{ include "drupal.name" . }}
    helm.sh/chart: {{ include "drupal.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  schedule: "{{ .Values.drupal.backup.schedule }}"
  startingDeadlineSeconds: 100
  concurrencyPolicy: Replace
  successfulJobsHistoryLimit: {{ .Values.drupal.cron.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.drupal.cron.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ include "drupal.name" . }}
            helm.sh/chart: {{ include "drupal.chart" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
            app.kubernetes.io/managed-by: {{ .Release.Service }}
          annotations:
            {{- if .Values.drupal.podAnnotations }}
            {{- toYaml .Values.drupal.podAnnotations | nindent 12 }}
            {{- end }}
        spec:
          serviceAccountName: {{ include "drupal.serviceAccountName" . }}
          {{- if .Values.drupal.tolerations }}
          tolerations:
            {{- toYaml .Values.drupal.tolerations | nindent 12 }}
          {{- end }}
          {{- if .Values.drupal.nodeSelector }}
          nodeSelector:
            {{- toYaml .Values.drupal.nodeSelector | nindent 12 }}
          {{- end }}
          restartPolicy: OnFailure
          containers:
          - name: drush
            image: "{{ .Values.drupal.image }}:{{ default .Chart.AppVersion .Values.drupal.tag }}"
            imagePullPolicy: {{ default "" .Values.drupal.imagePullPolicy | quote }}
            command:
            - '/bin/sh'
            - '-c'
            - |
                # Errors should fail the job
                set -e

                # Pre Install scripts
                {{- if .Values.drupal.cron.preInstallScripts }}
                {{ .Values.drupal.cron.preInstallScripts | nindent 14}}
                {{- end }}

                # Wait for DB to be available
                until drush sql:query 'SHOW TABLES;'; do echo Waiting for DB; sleep 3; done
                echo DB available

                # Check Drush status
                drush status

                # Run cron
                BACKUPNAME=$(date +%Y%m%d.%H%M%S)
                mkdir -p /backup/$BACKUPNAME
                echo "Backup DB"
                {{- if .Values.mysql.enabled }}
                drush -y sql-dump {{ .Values.drupal.backup.sqlDumpArgs }} --extra-dump=--no-tablespaces | gzip > /backup/$BACKUPNAME/db.sql.gz
                {{- else }}
                drush -y sql-dump {{ .Values.drupal.backup.sqlDumpArgs }} | gzip > /backup/$BACKUPNAME/db.sql.gz
                {{- end }}
                echo "Backup public files"
                tar {{ .Values.drupal.backup.filesArgs }} -czvf /backup/$BACKUPNAME/files.tar.gz --directory=sites/default/files .
                echo "Backup private files"
                tar {{ .Values.drupal.backup.privateArgs }} -czvf /backup/$BACKUPNAME/private.tar.gz --directory=/private .
            env:
              {{- include "drupal.env" . | nindent 14 }}
              {{- if .Values.extraEnvVars }}
              {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 14 }}
              {{- end }}
            volumeMounts:
              {{- include "drupal.volumeMounts" . | nindent 14 }}
              {{- if .Values.drupal.volumeMounts }}
              {{- include "common.tplvalues.render" (dict "value" .Values.drupal.volumeMounts "context" $) | nindent 14 }}
              {{- end }}
          {{- include "drupal.connectionPooler" . | nindent 10 }}
          {{- if .Values.drupal.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml .Values.drupal.imagePullSecrets | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.drupal.securityContext | nindent 12 }}
          volumes:
          {{- include "drupal.volumes" . | nindent 10 }}
          {{- include "drupal.connectionPooler.volumes" . | nindent 10 }}
          - name: backup
          {{- if .Values.drupal.backup.volume }}
            {{- toYaml .Values.drupal.backup.volume | nindent 12 }}
          {{- else }}
            emptyDir: {}
          {{- end }}
{{- end }}

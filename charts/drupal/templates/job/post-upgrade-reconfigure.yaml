{{- if .Values.drupal.reconfigure }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "drupal.fullname" . }}-reconfigure
  labels:
    app.kubernetes.io/name: {{ include "drupal.name" . }}
    helm.sh/chart: {{ include "drupal.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: {{ default "" .Values.drupal.backoffLimitReconfigure }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "drupal.name" . }}
        helm.sh/chart: {{ include "drupal.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
      annotations:
        {{- if .Values.drupal.podAnnotations }}
        {{- toYaml .Values.drupal.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "drupal.serviceAccountName" . }}
      {{- if .Values.drupal.tolerations }}
      tolerations:
        {{- toYaml .Values.drupal.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.drupal.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.drupal.nodeSelector | nindent 8 }}
      {{- end }}
      restartPolicy: OnFailure
      {{- if or (.Values.drupal.initContainers) (or (.Values.azure.azureFile.enabled) (.Values.azure.sharedDisk.enabled)) }}
      initContainers:
        {{- include "drupal.initContainers" . | nindent 8 }}
      {{- end }}
      containers:
      - name: drush
        image: "{{ .Values.drupal.image }}:{{ default .Chart.AppVersion .Values.drupal.tag }}"
        imagePullPolicy: {{ default "" .Values.drupal.imagePullPolicy | quote }}
        command:
          - '/bin/sh'
          - '-c'
          - |
              # Errors should fail the job
              set -e

              # Pre Upgrade scripts
              {{- if .Values.drupal.preUpgradeScripts }}
              {{ toYaml .Values.drupal.preUpgradeScripts | nindent 14}}
              {{- end }}

              # Wait for DB to be available
              {{ .Values.drupal.dbAvailabilityScript | nindent 14}}

              {{- if .Values.redis.enabled }}
              {{- if .Values.redis.sentinel.enabled }}
              until [[ $(printf "AUTH $REDIS_PASSWORD\r\n" | nc -w 2 {{ .Release.Name }}-redis {{ .Values.redis.sentinel.service.sentinelPort }}) == $(printf "+OK\r\n") ]]; do echo Waiting for Redis; sleep 3; done
              {{- else }}
              until [[ $(printf "AUTH $REDIS_PASSWORD\r\n" | nc -w 2 {{ .Release.Name }}-redis-master {{ .Values.redis.master.service.ports.redis }}) == $(printf "+OK\r\n") ]]; do echo Waiting for Redis; sleep 3; done
              {{- end }}
              echo Redis available
              {{- end }}

              # Check Drush status
              drush status || true

              # Run database updates
              {{- if .Values.drupal.cacheRebuildBeforeDatabaseMigration }}
              drush -y cache:rebuild
              {{- end }}
              {{- if .Values.drupal.updateDBBeforeDatabaseMigration }}
              drush -y updatedb
              {{- end }}

              # Rebuild caches
              drush -y cache:rebuild

              # Post Upgrade scripts
              {{- if .Values.drupal.postUpgradeScripts }}
              {{ toYaml .Values.drupal.postUpgradeScripts | nindent 14}}
              {{- end }}
        env:
          {{- include "drupal.env" . | nindent 10 }}
          {{- if .Values.extraEnvVars }}
          {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 10 }}
          {{- end }}
        volumeMounts:
          {{- include "drupal.volumeMounts" . | nindent 10 }}
          {{- if .Values.drupal.volumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.drupal.volumeMounts "context" $) | nindent 10 }}
          {{- end }}
      {{- include "drupal.connectionPooler" . | nindent 6 }}
      {{- if .Values.drupal.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.drupal.imagePullSecrets | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.drupal.securityContext | nindent 8 }}
      volumes:
      {{- include "drupal.volumes" . | nindent 6 }}
      {{- include "drupal.connectionPooler.volumes" . | nindent 6 }}
{{- end }}

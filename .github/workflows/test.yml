name: Test Helm Charts
on:
  pull_request:
    branches:
      - main

# Environment variables available to all jobs and steps in this workflow
env:
  K3D_VERSION: 5.4.4
  HELM_VERSION: 3.11.3
  KUBECTL_VERSION: 1.23.4
  KUSTOMIZE_VERSION: 4.5.7

jobs:
  test:
    name: 'Test'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Helm linting
      run: |
        ./test/lint.sh

    - name: Dependencies
      run: |
        mkdir -p ${GITHUB_WORKSPACE}/bin/

        # install kubectl
        curl -L https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o ${GITHUB_WORKSPACE}/bin/kubectl && chmod +x ${GITHUB_WORKSPACE}/bin/kubectl

        # install helm
        curl -L https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz -o helm-v${HELM_VERSION}-linux-amd64.tar.gz && tar -zxvf helm-v${HELM_VERSION}-linux-amd64.tar.gz && chmod +x linux-amd64/helm && mv linux-amd64/helm ${GITHUB_WORKSPACE}/bin/helm

        # install kustomize
        curl -L https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz -o kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz && tar -zxvf kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz && chmod +x kustomize && mv kustomize ${GITHUB_WORKSPACE}/bin/kustomize

        # install k3d
        curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | TAG=v${K3D_VERSION} bash

        # install taskfile
        curl -sL https://taskfile.dev/install.sh | sh

        # install yq
        sudo snap install yq

    - name: GitHub Path
      run: |
        echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

    - name: Create Kubernetes Cluster
      run: |
        k3d cluster create --config=cluster/config.yaml

    - name: Test Drupal Helm Chart
      run: |
        cd charts/drupal
        helm install drupal -f values.yaml . --timeout=600s

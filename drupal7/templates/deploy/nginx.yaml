apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "drupal7.fullname" . }}-nginx
  labels:
    app.kubernetes.io/name: {{ include "drupal7.name" . }}
    helm.sh/chart: {{ include "drupal7.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.nginx.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "drupal7.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      tier: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "drupal7.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        tier: frontend
{{- if .Values.nginx.podLabels }}
{{ toYaml .Values.nginx.podLabels | indent 8 }}
{{- end }}
{{- if .Values.nginx.podAnnotations }}
      annotations:
{{ toYaml .Values.nginx.podAnnotations | indent 8 }}
{{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/cm/nginx.yaml") . | sha256sum }}
    spec:
{{- if .Values.nginx.tolerations }}
      tolerations:
{{ toYaml .Values.nginx.tolerations | indent 6 }}
{{- end }}
{{- if .Values.nginx.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nginx.nodeSelector | indent 8 }}
{{- end }}
      containers:
      - image: "{{ .Values.nginx.image }}:{{ default (print .Chart.AppVersion "-nginx") .Values.nginx.tag }}"
        imagePullPolicy: {{ default "" .Values.nginx.imagePullPolicy | quote }}
        name: nginx
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /_healthz
            port: 80
          initialDelaySeconds: 0
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /_healthz
            port: 80
          initialDelaySeconds: 1
          periodSeconds: 5
        resources:
          requests:
            memory: "200Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "400m"
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: cm-nginx
          readOnly: true
          subPath: nginx.conf
{{- if .Values.nginx.volumeMounts }}
{{ toYaml .Values.nginx.volumeMounts | indent 8 }}
{{- end }}
      {{- if .Values.nginx.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.nginx.imagePullSecrets | indent 8 }}
      {{- end }}
      # Allow non-root user to access PersistentVolume
      securityContext:
        fsGroup: {{ .Values.nginx.securityContext.fsGroup }}
      volumes:
      - name: cm-nginx
        configMap:
          name: {{ include "drupal7.fullname" . }}-nginx
{{- if or (.Values.azureFile.enabled) (.Values.sharedDisk.enabled) }}
      - name: files-public
        persistentVolumeClaim:
          claimName: {{ include "drupal7.fullname" . }}-public
{{- end }}
{{- if .Values.nginx.volumes }}
{{ toYaml .Values.nginx.volumes | indent 6 }}
{{- end }}

# When installing with Azure Files

## Drupal
## Ref: https://github.com/drupalwxt/helm-drupal
drupal:
  ## Drupal image version
  ## ref: https://hub.docker.com/drupalwxt/site-wxt/tags/
  ##
  image: drupalwxt/site-wxt
  tag: 4.2.1

  ## Site configuration
  ##
  profile: wxt
  siteEmail: admin@example.com
  siteName: Drupal Install Profile (WxT)

  ## User of the application
  ##
  username: admin

  ## Application password
  ##
  ## password: password

  # php-fpm healthcheck
  # Requires https://github.com/renatomefi/php-fpm-healthcheck in the container.
  # (note: official images do not contain this feature yet)
  healthcheck:
    enabled: true

  # Enable all of the WxT extension modules
  extensions:
    enabled: false

  # Switch to canada.ca theme (only used if install and/or reconfigure are enabled)
  # Common options include: theme-wet-boew, theme-gcweb-legacy
  wxtTheme: theme-gcweb

  ## Extra settings.php settings
  ##
  extraSettings: ''
  #  |-
  #  $settings['trusted_host_patterns'] = ['^example\.com$'];

  ## Extra CLI scripts
  ##
  extraInstallScripts: ''
  #  |-
  #  drush config-set system.performance js.preprocess 0 -y;
  #  drush config-set system.performance css.preprocess 0 -y;

  # Install Drupal automatically
  install: true

  # Run migrations for default content
  migrate: true

  # Reconfigure on upgrade
  reconfigure: true

  # Allows custom /var/www/html/sites/default/files and /private mounts
  disableDefaultFilesMount: true

  # volumes: {}

  volumeMounts:
    - name: files-public
      mountPath: /var/www/html/sites/default/files
    - name: files-private
      mountPath: /private

## Nginx
## Ref: https://github.com/drupalwxt/helm-drupal
nginx:
  image: drupalwxt/site-wxt
  tag: 4.2.1-nginx

  # Set your cluster's DNS resolution service here
  resolver: 10.0.0.10

  # volumes: {}

  volumeMounts:
    - name: files-public
      mountPath: /var/www/html/sites/default/files

# kubectl create secret generic drupal-storage --from-literal=azurestorageaccountname=$STORAGE_ACCOUNT_NAME --from-literal=azurestorageaccountkey=$STORAGE_KEY -n drupal
azureFile:
  enabled: true
  storageClass: "-"

## Redis
## Ref: https://github.com/bitnami/charts/tree/master/bitnami/redis
redis:
  enabled: true

## Varnish
## Ref: https://github.com/StatCan/charts/tree/master/stable/varnish
varnish:
  enabled: true

## MySQL
## Ref: https://github.com/bitnami/charts/tree/master/bitnami/mysql
mysql:
  imageTag: 5.7.28
  enabled: true
  mysqlPassword: testPassword

  persistence:
    enabled: true
    storageClass: managed-premium
    size: 256Gi

## ProxySQL
## Ref: https://github.com/drupalwxt/helm-drupal
proxysql:
  enabled: false

## PostgreSQL
## Ref: https://github.com/bitnami/charts/tree/master/bitnami/postgresql
postgresql:
  enabled: false

## PGBouncer
## Ref: https://github.com/drupalwxt/helm-drupal
pgbouncer:
  enabled: false

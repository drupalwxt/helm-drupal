{{- if .Values.drupal.additionalCrons }}
{{- $name := include "drupal.name" . -}}
{{- $fullName := include "drupal.fullname" . -}}
{{- $chartName := include "drupal.chart" . -}}
{{- $chart := .Chart }}
{{- $release := .Release }}
{{- $values := .Values }}
{{- range $cronName, $cron := .Values.drupal.additionalCrons }}
---
{{- if semverCompare ">=1.21" $.Capabilities.KubeVersion.GitVersion }}
apiVersion: batch/v1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ $fullName }}-{{ $cronName }}
  labels:
    app.kubernetes.io/name: {{ $name }}
    helm.sh/chart: {{ $chartName }}
    app.kubernetes.io/instance: {{ $release.Name }}
    app.kubernetes.io/managed-by: {{ $release.Service }}
spec:
  schedule: "{{ $cron.schedule }}"
  startingDeadlineSeconds: 100
  concurrencyPolicy: Replace
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ $name }}
            helm.sh/chart: {{ $chartName }}
            app.kubernetes.io/instance: {{ $release.Name }}
            app.kubernetes.io/managed-by: {{ $release.Service }}
        spec:
{{- if $values.drupal.tolerations }}
          tolerations:
{{ toYaml $values.drupal.tolerations | indent 10 }}
{{- end }}
{{- if $values.drupal.nodeSelector }}
          nodeSelector:
{{ toYaml $values.drupal.nodeSelector | indent 12 }}
{{- end }}
          restartPolicy: OnFailure
          containers:
          - name: cron
            image: "{{ $values.drupal.image }}:{{ default $chart.AppVersion $values.drupal.tag }}"
            imagePullPolicy: {{ default "" $values.drupal.imagePullPolicy | quote }}
            command:
            - '/bin/sh'
            - '-c'
            - |
{{ $cron.script | indent 14 }}
            env:
{{- if $values.external.enabled }}
            - name: EXTERNAL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: databasePassword
{{- else if $values.mysql.enabled }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  # This is not ideal, but calling the template
                  # was returning the wrong result.
                  name: "{{ $release.Name }}-mysql"
                  key: mysql-password
{{- else if $values.postgresql.enabled }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ $release.Name }}-postgresql"
                  key: password
{{- end }}
{{- if $values.redis.enabled }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ $release.Name }}-redis"
                  key: redis-password
{{- end }}
            - name: DRUPAL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ $fullName }}"
                  key: password
{{- if $values.extraVars }}
{{ toYaml $values.extraVars | indent 12 }}
{{- end }}
            volumeMounts:
            - name: cm-drupal
              readOnly: true
              mountPath: /usr/local/etc/php/php.ini
              subPath: php.ini
            - name: cm-drupal
              readOnly: true
              mountPath: /usr/local/etc/php/conf.d/opcache-recommended.ini
              subPath: opcache-recommended.ini
            - name: cm-drupal
              readOnly: true
              mountPath: /usr/local/etc/php-fpm.d/www.conf
              subPath: www.conf
            - name: cm-drupal
              mountPath: /var/www/html/sites/default/settings.php
              subPath: settings.php
              readOnly: true
            - name: cm-drupal
              mountPath: /var/www/html/sites/default/extra.settings.php
              subPath: extra.settings.php
              readOnly: true
            - name: cm-drupal
              mountPath: /var/www/html/sites/default/services.yml
              subPath: services.yml
              readOnly: true
            - name: ssmtp
              mountPath: /etc/ssmtp/ssmtp.conf
              subPath: ssmtp.conf
              readOnly: true
            - name: twig-cache
              mountPath: /cache/twig
{{- if not $values.drupal.disableDefaultFilesMount }}
            - name: files
              mountPath: /var/www/html/sites/default/files
              subPath: public
            - name: files
              mountPath: /private
              subPath: private
{{- end }}
{{- if $values.drupal.volumeMounts }}
{{ toYaml $values.drupal.volumeMounts | indent 12 }}
{{- end }}
{{- if $cron.volumeMounts }}
{{ toYaml $cron.volumeMounts | indent 12 }}
{{- end }}
{{- if $values.proxysql.enabled }}
          - name: proxysql
            image: proxysql/proxysql:2.1.0
            imagePullPolicy: Always
            ports:
              - containerPort: 6032
              - containerPort: 6033
            volumeMounts:
              - name: configfiles
                mountPath: "/etc/proxysql"
                readOnly: true
            livenessProbe:
              tcpSocket:
                port: 6032
              periodSeconds: 60
            command: ["/usr/bin/proxysql", "--initial", "-f", "-c", "/etc/proxysql/proxysql.conf"]
            securityContext:
              allowPrivilegeEscalation: false
              runAsUser: 0
              runAsGroup: 999
{{- else if $values.pgbouncer.enabled }}
          - name: pgbouncer
            image: mcr.microsoft.com/azure-oss-db-tools/pgbouncer-sidecar:latest
            imagePullPolicy: Always
            ports:
              - containerPort: 5432
            volumeMounts:
              - name: configfiles
                mountPath: "/etc/pgbouncer"
                readOnly: true
            livenessProbe:
              tcpSocket:
                port: 5432
              periodSeconds: 60
            lifecycle:
              preStop:
                exec:
                  command: ["/bin/sh", "-c", "killall -INT pgbouncer && sleep 120"]
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ['all']
{{- end  }}
{{- if $values.drupal.imagePullSecrets }}
          imagePullSecrets:
{{ toYaml $values.drupal.imagePullSecrets | indent 12 }}
{{- end }}
          # Allow non-root user to access PersistentVolume
          securityContext:
{{ toYaml $values.drupal.securityContext | indent 12 }}
          volumes:
          - name: cm-drupal
            configMap:
              name: {{ $fullName }}
          - name: ssmtp
            secret:
              secretName: {{ $fullName }}-ssmtp
              items:
                - key: ssmtp.conf
                  path: ssmtp.conf
          - name: twig-cache
            emptyDir: {}
{{- if $values.drupal.persistence.enabled }}
          - name: files
            persistentVolumeClaim:
              claimName: {{ $fullName }}-drupal
{{- else if or ($values.azure.azureFile.enabled) ($values.azure.sharedDisk.enabled) }}
          - name: files-public
            persistentVolumeClaim:
              claimName: {{ $fullName }}-public
          - name: files-private
            persistentVolumeClaim:
              claimName: {{ $fullName }}-private
{{- else if not $values.drupal.disableDefaultFilesMount }}
          - name: files
            emptyDir: {}
{{- end }}
{{- if $values.proxysql.enabled }}
          - name: configfiles
            secret:
              secretName: {{ $fullName }}-proxysql
{{- else if $values.pgbouncer.enabled }}
          - name: configfiles
            secret:
              secretName: {{ $fullName }}-pgbouncer
{{- end }}
{{- if $values.drupal.volumes }}
{{ toYaml $values.drupal.volumes | indent 10 }}
{{- end }}
{{- if $cron.volumes }}
{{ toYaml $cron.volumes | indent 10 }}
{{- end }}
{{- end }}
{{- end }}

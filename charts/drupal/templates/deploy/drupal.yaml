apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "drupal.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "drupal.name" . }}
    helm.sh/chart: {{ include "drupal.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.drupal.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "drupal.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      tier: drupal
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "drupal.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        tier: drupal
      annotations:
        {{- if .Values.drupal.podAnnotations }}
        {{- toYaml .Values.drupal.podAnnotations | nindent 8 }}
        {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/cm/drupal.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "drupal.serviceAccountName" . }}
      {{- if .Values.drupal.tolerations }}
      tolerations:
        {{- toYaml .Values.drupal.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.drupal.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.drupal.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if or (.Values.drupal.initContainers) (.Values.drupal.volumePermissions.enabled) (or (.Values.azure.azureFile.enabled) (.Values.azure.sharedDisk.enabled)) }}
      initContainers:
        {{- include "drupal.initContainers" . | nindent 8 }}
      {{- end }}
      containers:
      - image: "{{ .Values.drupal.image }}:{{ default .Chart.AppVersion .Values.drupal.tag }}"
        imagePullPolicy: {{ default "" .Values.drupal.imagePullPolicy | quote }}
        {{- if .Values.drupal.command }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.drupal.command "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.drupal.args }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.drupal.args "context" $) | nindent 8 }}
        {{- end }}
        name: drupal
        ports:
        - containerPort: 9000
          name: tcp-php-fpm
          protocol: TCP
        {{- if .Values.drupal.healthcheck.enabled }}
        livenessProbe:
          exec:
            command:
              - php-fpm-healthcheck
          initialDelaySeconds: 0
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
              - php-fpm-healthcheck
          initialDelaySeconds: 1
          periodSeconds: 5
        {{- end }}
        env:
          {{- include "drupal.env" . | nindent 10 }}
          {{- if .Values.extraEnvVars }}
          {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 10 }}
          {{- end }}
        {{- if .Values.drupal.resources }}
        resources:
          {{- toYaml .Values.drupal.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
          {{- include "drupal.volumeMounts" . | nindent 10 }}
          {{- if .Values.drupal.volumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.drupal.volumeMounts "context" $) | nindent 10 }}
          {{- end }}
      {{- include "drupal.connectionPooler" . | nindent 6 }}
      {{- if .Values.drupal.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.drupal.imagePullSecrets | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.drupal.securityContext | nindent 8 }}
      volumes:
      {{- include "drupal.volumes" . | nindent 6 }}
      {{- include "drupal.connectionPooler.volumes" . | nindent 6 }}
